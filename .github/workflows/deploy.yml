name: 🚀 Build, Test and Deploy

on:
  push:
    branches: [ "main" ]

jobs:
  lint:
    name: 🧹 Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
      - name: ⚙️ Setup Node.js and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'
      - name: 📦 Install dependencies
        run: yarn install --frozen-lockfile
      - name: 🔬 Run linter
        run: yarn lint

  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7-alpine
        env:
          REDIS_PASSWORD: test_secret_password
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli -a $REDIS_PASSWORD ping || exit 1" \
          --health-interval 5s \
          --health-timeout 3s \
          --health-retries 5
        command: ["redis-server", "--appendonly", "yes", "--requirepass", "${REDIS_PASSWORD}"]
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
      - name: ⚙️ Setup Node.js and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'
      - name: 📦 Install dependencies
        run: yarn install --frozen-lockfile
      - name: ⚡ Run all tests
        run: REDIS_URL=redis://default:${{ job.services.redis.env.REDIS_PASSWORD }}@localhost:6379 yarn test

  build_and_deploy:
    name: 🏗️ Build & Deploy
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
      - name: ⚙️ Setup Node.js and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'
      - name: 📦 Install dependencies
        run: yarn install --frozen-lockfile
      - name: 🛠️ Build all packages
        run: yarn build
      
      - name: 🌐 Deploy Frontend to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: packages/frontend/dist

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: 🔑 Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: 📦 Set up Docker cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: 🏗️ Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./packages/bot/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/telegram-snake:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

